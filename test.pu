#!/usr/bin/env python
import requests
import json

def main():
    module = AnsibleModule(
        argument_spec = dict(
            token=dict(type='str', required=True),
            domain=dict(type='str', required=True),
            state=dict(required=False, choises=['present', 'absent'], default='present'),
            groups=dict(type='str', required=True),
            members=dict(type='list', required=True)
        )
    )
    
    get_tokens(module)
    get_users(module, main_api_token)

    if module.params['state'] == 'present':
        create_group(module)
    elif module.params['state'] == 'absent':
        delete_group(module)

def get_tokens(module):
    url = "https://dev-lod.eu.auth0.com/oauth/token"
    payload = "{\"client_id\":\"wurPvXeAQFZTKA3nWu8cXt8k6Dt0XDVX\",\"client_secret\":\"Uu0mb4lfE4ubFKVqusA8LJU0Hdeze5GdQYd6OEB93ivN5tUIzL9oDeAhHc5-UI-g\",\"audience\":\"https://dev-lod.eu.auth0.com/api/v2/\",\"grant_type\":\"client_credentials\"}"
    headers = { 'content-type': "application/json" }
    rt = requests.request("POST", url, data=payload, headers=headers)
    response = rt.json()
    main_api_token = response["access_token"]
    return(main_api_token)

def get_users(module)
    ###get_users
    u_url = "https://dev-lod.eu.auth0.com/api/v2/users"
    headers_u = {
        'authorization': "Bearer %s" %main_api_token,
        'content-type': "application/json"
        }   
    get_users = requests.request("GET", u_url, headers=headers_u)
    response_u = get_users.json()
    print(module.params['members'])
    users_id = get_users.json()
    return(users_id)

def create_group(module):
    # ###create_groups
    # g_url = module.params['domain'] + "/groups"
    # payload = ('{ "name" : "' + str(module.params['groups']) + '", "description": "' + str(module.params['groups']) +'"}')

    # headers = {
    #     'Content-type': 'application/json',
    #     'authorization': "Bearer %s" %response["access_token"]
    # }   
    
    # create_group  = requests.request("POST", g_url, data=payload, headers=headers)
    # response = create_group.json()
    
    # m_payload = str(module.params['members'])
    # m_payload = m_payload.replace("'", '"')

    # # if create_group.status_code == 200:
    # #     m_url = module.params['domain'] + str("/groups/" + response['_id']) + "/members"
    # #     rm = requests.request("PATCH", m_url, data=m_payload, headers=headers)
    # #     return module.exit_json(changed=False)
    # # else:
    # #     if create_group.status_code == 400:
    # #         rg = requests.request("GET", g_url, headers=headers)
    # #         response_g = rg.json()
    # #         g_id = next(group["_id"] for group in response_g["groups"] if group["description"] == module.params['groups'])
    # #         cg_url = g_url + str("/" + g_id) + "/members"
    # #         rmg = requests.request("PATCH", cg_url, data=m_payload, headers=headers)
    # #         return module.exit_json(changed=False)

    # return module.exit_json(msg=create_group.json())

from ansible.module_utils.basic import *
from ansible.module_utils.urls import *
main()